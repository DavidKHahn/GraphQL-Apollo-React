{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/GraphQL-Apollo-React/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dhjkmedia/Desktop/React-Tutorial-Apps/GraphQL-Apollo-React/client/src/components/Launches.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query LaunchesQuery {\\n        launches {\\n            flight_number\\n            mission_name\\n            launch_date_local\\n            launch_success\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nconst LAUNCHES_QUERY = gql(_templateObject());\nexport class Launches extends Component {\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Launches\"), React.createElement(Query, {\n      query: LAUNCHES_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) console.log(error);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, data.launches.map(launch => React.createElement(LaunchItem, {\n        key: launch.flight_number,\n        launch: launch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\nexport default Launches;","map":{"version":3,"sources":["/Users/dhjkmedia/Desktop/React-Tutorial-Apps/GraphQL-Apollo-React/client/src/components/Launches.js"],"names":["React","Component","Fragment","gql","Query","LaunchItem","LAUNCHES_QUERY","Launches","render","loading","error","data","console","log","launches","map","launch","flight_number"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAGH,GAAH,mBAApB;AAWA,OAAO,MAAMI,QAAN,SAAuBN,SAAvB,CAAiC;AACtCO,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC;AAAEG,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC1B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAGX,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAECC,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkBC,MAAM,IACpB,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,MAAM,CAACC,aAAxB;AAAuC,QAAA,MAAM,EAAED,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFD,CAAP;AAOH,KAdT,CAFF,CADF;AAsBD;;AAxBqC;AA2BxC,eAAeT,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <Query query={LAUNCHES_QUERY}>\n            {\n                ({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>\n                    if (error) console.log(error);\n\n\n                    return <Fragment>\n                        {\n                            data.launches.map(launch => (\n                                <LaunchItem key={launch.flight_number} launch={launch}/>\n                            ))\n                        }\n                        </Fragment>;\n                }\n            }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launches\n"]},"metadata":{},"sourceType":"module"}